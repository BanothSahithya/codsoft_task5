import json

class ContactManager:
    def _init_(self):
        self.contacts = []

    def save_contacts(self):
        with open('contacts.json', 'w') as file:
            json.dump(self.contacts, file)

    def load_contacts(self):
        try:
            with open('contacts.json', 'r') as file:
                self.contacts = json.load(file)
        except FileNotFoundError:
            self.contacts = []

    def display_contacts(self):
        print("\nContact List:")
        for contact in self.contacts:
            print(f"Name: {contact['name']}, Phone: {contact['phone']}, Email: {contact['email']}, Address: {contact['address']}")
        print()

    def add_contact(self, name, phone, email, address):
        new_contact = {
            'name': name,
            'phone': phone,
            'email': email,
            'address': address
        }
        self.contacts.append(new_contact)
        self.save_contacts()
        print(f"\nContact '{name}' added successfully.")

    def search_contact(self, search_term):
        results = []
        for contact in self.contacts:
            if (search_term.lower() in contact['name'].lower()) or (search_term in contact['phone']):
                results.append(contact)
        return results

    def update_contact(self, name, new_phone=None, new_email=None, new_address=None):
        for contact in self.contacts:
            if contact['name'].lower() == name.lower():
                if new_phone:
                    contact['phone'] = new_phone
                if new_email:
                    contact['email'] = new_email
                if new_address:
                    contact['address'] = new_address
                self.save_contacts()
                print(f"\nContact '{name}' updated successfully.")
                return
        print(f"\nContact '{name}' not found.")

    def delete_contact(self, name):
        for contact in self.contacts:
            if contact['name'].lower() == name.lower():
                self.contacts.remove(contact)
                self.save_contacts()
                print(f"\nContact '{name}' deleted successfully.")
                return
        print(f"\nContact '{name}' not found.")

def main():
    contact_manager = ContactManager()
    contact_manager.load_contacts()

    while True:
        print("\nContact Management System")
        print("1. View Contacts")
        print("2. Add Contact")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")

        choice = input("Enter your choice (1-6): ")

        if choice == '1':
            contact_manager.display_contacts()
        elif choice == '2':
            name = input("Enter contact name: ")
            phone = input("Enter contact phone number: ")
            email = input("Enter contact email: ")
            address = input("Enter contact address: ")
            contact_manager.add_contact(name, phone, email, address)
        elif choice == '3':
            search_term = input("Enter name or phone number to search: ")
            results = contact_manager.search_contact(search_term)
            if results:
                print("\nSearch Results:")
                for result in results:
                    print(f"Name: {result['name']}, Phone: {result['phone']}, Email: {result['email']}, Address: {result['address']}")
            else:
                print("\nNo matching contacts found.")
        elif choice == '4':
            name = input("Enter contact name to update: ")
            new_phone = input("Enter new phone number (press Enter to keep the same): ")
            new_email = input("Enter new email (press Enter to keep the same): ")
            new_address = input("Enter new address (press Enter to keep the same): ")
            contact_manager.update_contact(name, new_phone, new_email, new_address)
        elif choice == '5':
            name = input("Enter contact name to delete: ")
            contact_manager.delete_contact(name)
        elif choice == '6':
            print("Exiting the Contact Management System. Goodbye!")
  break
        else:
            print("Invalid choice. Please enter a number between 1 and 6.")

if _name_ == "_main_":
    main()
